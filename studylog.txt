docker build -f Dockerfile -t testdocker .
创建容器
dockerfile
FROM docker.io/java

VOLUME /tmp

ADD hema-newRetail-crm-0.0.1-SNAPSHOT.jar app.jar

ENTRYPOINT ["java","-jar","/app.jar"]



docker run -d -p 8081:8081 testdocker
一二三四五六七八九十
startx------启动桌面窗口
locale ------ 显示支持的语系与目前使用的语系
date -------显示日期与时间 +%Y-%m-%d-%H:%M^C
cal -------- 显示日历 +cal [month] [year]
ctrl+c ----- 中断指令
ctrl+d ----- 等同于exit
shift+pageup/pagedown ----- 翻页
---------------------------------------   --help  提示用法 如date+%A =具体星期几
ls -al 查询所有文件及其权限包括隐藏文件
chgrp ：改变文件所属群组 chgrp +群组名+文件名（-R（包括子目录））
chown ：改变文件拥有者 chown +群组名+文件名（-R（包括子目录））
chmod ：改变文件的权限 chmod +权限代码（r=4 w=2 x=1）（如777/770/761）+文件名（-R（包括子目录））
		2.u，g，o ，a /=rwx  + rwx +文件名
创建用户adduser 用户名/passwd 密码
/sbin/iptables -I INPUT -p tcp --dport 8080 -j ACCEPT  开放端口
docker run -it -d --name=cloud_boh  --privileged=true  -p 8082ls -ld /var/mail
:8081 -v /servers/docker-jar/cloud_boh:/usr/Downloads/ cloud_boh  /bin/bash
docker run 破除权限 指定目录 指定名字 指定端口
uname -r 查看linux 核心版本。
uname -m 查看linux 位版本。
lsb_release  -a 查看系统版本。
pwd -p 真实路径  并非链接文件的数据显示
ls -ld /var/mail  查看文件真实路径。
而非内容变更时间 （modification time）
mkdir -m 777 test  创建目录时指定权限  -p  创建多级目录
rmdir 删除空目录 仅仅是空的-p删除多级
mv  移动
ls：文件与目录的查看
	-a ：全部的文件，连同隐藏文件（ 开头为 . 的文件） 一起列出来（常用）
	-A ：全部的文件，连同隐藏文件，但不包括 . 与 .. 这两个目录
	-d ：仅列出目录本身，而不是列出目录内的文件数据（常用）
	-f ：直接列出结果，而不进行排序 （ls 默认会以文件名排序！）
	-F ：根据文件、目录等信息，给予附加数据结构，例如：
	*:代表可可执行文件； /:代表目录； =:代表 socket 文件； &#124;:代表 FIFO 文件；
	-h ：将文件大小以人类较易读的方式（例如 GB, KB 等等） 列出来；
	-i ：列出 inode 号码，inode 的意义下一章将会介绍；
	-l ：长数据串行出，包含文件的属性与权限等等数据；（常用）
	-n ：列出 UID 与 GID 而非使用者与群组的名称 （UID与GID会在帐号管理提到！）
	-r ：将排序结果反向输出，例如：原本文件名由小到大，反向则为由大到小；
	-R ：连同子目录内容一起列出来，等于该目录下的所有文件都会显示出来；
	-S ：以文件大小大小排序，而不是用文件名排序；
	-t ：依时间排序，而不是用文件名。
	--color=never ：不要依据文件特性给予颜色显示；
	--color=always ：显示颜色
	--color=auto ：让系统自行依据设置来判断是否给予颜色
	--full-time ：以完整时间模式 （包含年、月、日、时、分） 输出
	--time={atime,ctime} ：输出 access 时间或改变权限属性时间 （ctime）
cp  复制
	-a ：相当于 -dr --preserve=all 的意思，至于 dr 请参考下列说明；（常用）
	-d ：若来源文件为链接文件的属性（link file） ，则复制链接文件属性而非文件本身；
	-f ：为强制（force） 的意思，若目标文件已经存在且无法打开，则移除后再尝试一次；
	-i ：若目标文件（destination） 已经存在时，在覆盖时会先询问动作的进行（常用）
	-l ：进行硬式链接（hard link） 的链接文件创建，而非复制文件本身；
	-p ：连同文件的属性（权限、用户、时间） 一起复制过去，而非使用默认属性（备份常用） ；
	-r ：递回持续复制，用于目录的复制行为；（常用）
	-s ：复制成为符号链接文件 （symbolic link） ，亦即“捷径”文件；
	-u ：destination 比 source 旧才更新 destination，或 destination 不存在的情况下才复制。
	--preserve=all ：除了 -p 的权限相关参数外，还加入 SELinux 的属性, links, xattr 等也复制了。
	最后需要注意的，如果来源文件有两个以上，则最后一个目的文件一定要是“目录”才行！
rm 删除
	-f ：就是 force 的意思，忽略不存在的文件，不会出现警告讯息；
	-i ：互动模式，在删除前会询问使用者是否动作
	-r ：递回删除啊！最常用在目录的删除了！这是非常危险的选项！！！
      rm -r  是递归删除用以删除文件夹默认带有  -r 提示 \rm -r  加一个反斜杠就可以解决提示问题
mv 移动文件或者目录或者更名
	-f ：force 强制的意思，如果目标文件已经存在，不会询问而直接覆盖；
	-i ：若目标文件 （destination） 已经存在时，就会询问是否覆盖！
	-u ：若目标文件已经存在，且 source 比较新，才会更新 （update）
basename   取得文件名 
dirname      取得目录名
查看文件
	cat 从第一行开始显示内容-----concatenate--连续
		-A ：相当于 -vET 的整合选项，可列出一些特殊字符而不是空白而已；
		-b ：列出行号，仅针对非空白行做行号显示，空白行不标行号！
		-E ：将结尾的断行字符 $ 显示出来；
		-n ：打印出行号，连同空白行也会有行号，与 -b 的选项不同；
		-T ：将 [tab] 按键以 ^I 显示出来；
		-v ：列出一些看不出来的特殊字符
	tac 从最后一行开始显示内容
		-n 或 --number：由 1 开始对所有输出的行数编号。
		-b 或 --number-nonblank：和 -n 相似，只不过对于空白行不编号。
		-s 或 --squeeze-blank：当遇到有连续两行以上的空白行，就代换为一行的空白行。
		-v 或 --show-nonprinting：使用 ^ 和 M- 符号，除了 LFD 和 TAB 之外。
		-E 或 --show-ends : 在每行结束处显示 $。
		-T 或 --show-tabs: 将 TAB 字符显示为 ^I。
		-A, --show-all：等价于 -vET。
		-e：等价于"-vE"选项；
		-t：等价于"-vT"选项；
	nl 显示的时候输出行号
		-b ：指定行号指定的方式，主要有两种：
			-b a ：表示不论是否为空行，也同样列出行号（类似 cat -n） ；
			-b t ：如果有空行，空的那一行不要列出行号（默认值） ；
		-n ：列出行号表示的方法，主要有三种：
			-n ln ：行号在屏幕的最左方显示；
			-n rn ：行号在自己字段的最右方显示，且不加 0 ；
			-n rz ：行号在自己字段的最右方显示，且加 0 ；
		-w ：行号字段的占用的字符数。
		-num 一次显示的行数
		-d 提示使用者，在画面下方显示 [Press space to continue, 'q' to quit.] ，如果使用者按错键，则会显示 [Press 'h' for instructions.] 而不是 		'哔' 声
		-l 取消遇见特殊字元 ^L（送纸字元）时会暂停的功能
		-f 计算行数时，以实际上的行数，而非自动换行过后的行数（有些单行字数太长的会被扩展为两行或两行以上）
		-p 不以卷动的方式显示每一页，而是先清除萤幕后再显示内容
		-c 跟 -p 相似，不同的是先显示内容再清除其他旧资料
		-s 当遇到有连续两行以上的空白行，就代换为一行的空白行
		-u 不显示下引号 （根据环境变数 TERM 指定的 terminal 而有所不同）
		+/pattern 在每个文档显示前搜寻该字串（pattern），然后从该字串之后开始显示
		+num 从第 num 行开始显示
		fileNames 欲显示内容的文档，可为复数个数
	more 一页一页的显示文件内容
		空白键 （space） ：代表向下翻一页；
		Enter ：代表向下翻“一行”；
		/字串 ：代表在这个显示的内容当中，向下搜寻“字串”这个关键字；
		:f ：立刻显示出文件名以及目前显示的行数；
		q ：代表立刻离开 more ，不再显示该文件内容。
		b 或 [ctrl]-b ：代表往回翻页，不过这动作只对文件有用，对管线无用。
	less 与 more 类似，但是比 more 更好的是，他可以往前翻页！
		空白键 ：向下翻动一页；
		[pagedown]：向下翻动一页；
		[pageup] ：向上翻动一页；
		/字串 ：向下搜寻“字串”的功能；
		?字串 ：向上搜寻“字串”的功能；
		n ：重复前一个搜寻 （与 / 或 ? 有关！）
		N ：反向的重复前一个搜寻 （与 / 或 ? 有关！）
		g ：前进到这个数据的第一行去；
		G ：前进到这个数据的最后一行去 （注意大小写） ；
		q ：离开 less 这个程序；
	head 只看头几行
	tail 只看尾巴几行
	od 以二进制的方式读取文件内容